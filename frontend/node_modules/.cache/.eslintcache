[{"/home/roddy/Desktop/mynotes/frontend/src/index.js":"1","/home/roddy/Desktop/mynotes/frontend/src/App.js":"2","/home/roddy/Desktop/mynotes/frontend/src/pages/NotesListPage.js":"3","/home/roddy/Desktop/mynotes/frontend/src/pages/NotePage.js":"4","/home/roddy/Desktop/mynotes/frontend/src/components/Header.js":"5","/home/roddy/Desktop/mynotes/frontend/src/components/ListItem.js":"6","/home/roddy/Desktop/mynotes/frontend/src/components/AddButton.js":"7"},{"size":231,"mtime":1677343550893,"results":"8","hashOfConfig":"9"},{"size":559,"mtime":1677555445179,"results":"10","hashOfConfig":"9"},{"size":955,"mtime":1677641479734,"results":"11","hashOfConfig":"9"},{"size":2634,"mtime":1677641482914,"results":"12","hashOfConfig":"9"},{"size":144,"mtime":1677375440172,"results":"13","hashOfConfig":"9"},{"size":965,"mtime":1677555455434,"results":"14","hashOfConfig":"9"},{"size":327,"mtime":1677623680781,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1krgf7r",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/home/roddy/Desktop/mynotes/frontend/src/index.js",[],[],[],"/home/roddy/Desktop/mynotes/frontend/src/App.js",[],[],"/home/roddy/Desktop/mynotes/frontend/src/pages/NotesListPage.js",[],[],"/home/roddy/Desktop/mynotes/frontend/src/pages/NotePage.js",["39","40","41"],[],"import React, {useState, useEffect} from 'react'\nimport { useParams } from \"react-router-dom\"\n// import notes from '../assets/data'\nimport { Link } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nexport default function NotesListPage() {\n    // let note = notes.find(note => note.id === Number({id}.id))\n    // console.log(`${id}`);\n    let { id } = useParams();\n    let noteId = {id}.id\n    let [note, setNote] = useState(null)\n\n    useEffect(() => {\n        getNote()   \n    }, [noteId])\n\n    let getNote = async() => {\n        if (noteId === 'new') return\n        let response = await fetch(`http://127.0.0.1:8000/api/notes/${noteId}`)\n        let data = await response.json()\n        setNote(data)\n    }\n    \n\n    let createNote = async () => {\n        await fetch(`http://127.0.0.1:8000/api/notes/create/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(note)\n    })\n    }\n\n    let updateNote = async () => {\n        await fetch(`http://127.0.0.1:8000/api/notes/${noteId}/update/`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(note)\n    })\n}\n\n    let deleteNote = async () => {\n        await fetch(`http://127.0.0.1:8000/api/notes/${noteId}/delete/`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({note})\n    })\n    }\n\n    let handleSubmit = () => {\n\n        if(noteId != 'new' && !note.body) {\n            deleteNote()\n        } else if (noteId !== 'new') {\n            updateNote()\n        } else if (noteId === 'new' && note !== null) {\n            createNote()\n        }\n\n    }\n\n    return(\n        <div className=\"note\">\n            <div className=\"note-header\">\n                <h3>\n                    <Link to=\"/\">\n                        <ArrowLeft onClick={handleSubmit} />\n                    </Link>\n                </h3>\n\n                {noteId != 'new' ? (\n                    <Link to={\"/\"}>\n                    <button onClick={deleteNote}>Delete</button>\n                    </Link>\n                ) : (\n                    <Link to={\"/\"}>\n                    <button onClick={handleSubmit}>Done</button>\n                    </Link>\n                )}\n                \n            </div>\n            <textarea onChange={(e) => {setNote({...note, 'body': e.target.value})}} value={note?.body}>\n                </textarea>\n        </div>\n    )\n}","/home/roddy/Desktop/mynotes/frontend/src/components/Header.js",[],[],"/home/roddy/Desktop/mynotes/frontend/src/components/ListItem.js",[],[],"/home/roddy/Desktop/mynotes/frontend/src/components/AddButton.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":16,"column":8,"nodeType":"44","endLine":16,"endColumn":16,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":58,"column":19,"nodeType":"48","messageId":"49","endLine":58,"endColumn":21},{"ruleId":"46","severity":1,"message":"47","line":77,"column":25,"nodeType":"48","messageId":"49","endLine":77,"endColumn":27},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["50"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"desc":"51","fix":"52"},"Update the dependencies array to be: [getNote, noteId]",{"range":"53","text":"54"},[528,536],"[getNote, noteId]"]
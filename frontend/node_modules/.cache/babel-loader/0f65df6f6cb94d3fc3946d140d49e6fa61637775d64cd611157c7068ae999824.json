{"ast":null,"code":"var _jsxFileName = \"/home/roddy/Desktop/Notes-App/mynotes/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from \"react-router-dom\";\n// import notes from '../assets/data'\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotesListPage() {\n  _s();\n  // let note = notes.find(note => note.id === Number({id}.id))\n  // console.log(`${id}`);\n  let {\n    id\n  } = useParams();\n  let noteId = {\n    id\n  }.id;\n  let {\n    navigate\n  } = useNavigate();\n  console.log(`${history}`);\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    let response = await fetch(`http://localhost:8000/notes/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n\n  // This function will fire off a PUT method to save data\n  let updateNote = async () => {\n    await fetch(`http://localhost:8000/notes/${noteId}`, {\n      method: 'PUT',\n      header: {\n        'Conent-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...note,\n        'updated': new Date()\n      })\n    });\n  };\n  let handleSubmit = () => {\n    updateNote();\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(NotesListPage, \"W7M7lyh2BrEpJuAYo3y8T0tq4rk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NotesListPage;\nvar _c;\n$RefreshReg$(_c, \"NotesListPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Link","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotesListPage","_s","id","noteId","navigate","console","log","history","note","setNote","getNote","response","fetch","data","json","updateNote","method","header","body","JSON","stringify","Date","handleSubmit","className","children","to","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/home/roddy/Desktop/Notes-App/mynotes/src/pages/NotePage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useNavigate, useParams } from \"react-router-dom\"\n// import notes from '../assets/data'\nimport { Link } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nexport default function NotesListPage() {\n    // let note = notes.find(note => note.id === Number({id}.id))\n    // console.log(`${id}`);\n    let { id } = useParams();\n    let noteId = {id}.id\n\n    let { navigate } = useNavigate();\n    console.log(`${history}`)\n\n    let [note, setNote] = useState(null)\n\n    useEffect(() => {\n        getNote()   \n    }, [noteId])\n\n    let getNote = async() => {\n        let response = await fetch(`http://localhost:8000/notes/${noteId}`)\n        let data = await response.json()\n        setNote(data)\n    }\n\n    // This function will fire off a PUT method to save data\n    let updateNote = async () => {\n        await fetch(`http://localhost:8000/notes/${noteId}`, {\n            method: 'PUT',\n            header: {\n                'Conent-Type': 'application/json'\n            },\n            body: JSON.stringify({...note, 'updated': new Date()})\n    })\n}\n\n    let handleSubmit = () => {\n        updateNote()\n        navigate('/');\n    }\n\n    return(\n        <div className=\"note\">\n            <div className=\"note-header\">\n                <h3>\n                    <Link to=\"/\">\n                        <ArrowLeft onClick={handleSubmit} />\n                    </Link>\n                </h3>\n            </div>\n            <textarea onChange={(e) => {setNote({...note, 'body': e.target.value})}} value={note?.body}>\n                </textarea>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD;AACA,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,cAAc,IAAIC,SAAS,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtE,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACpC;EACA;EACA,IAAI;IAAEC;EAAG,CAAC,GAAGR,SAAS,EAAE;EACxB,IAAIS,MAAM,GAAG;IAACD;EAAE,CAAC,CAACA,EAAE;EAEpB,IAAI;IAAEE;EAAS,CAAC,GAAGX,WAAW,EAAE;EAChCY,OAAO,CAACC,GAAG,CAAE,GAAEC,OAAQ,EAAC,CAAC;EAEzB,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZkB,OAAO,EAAE;EACb,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,IAAIO,OAAO,GAAG,MAAAA,CAAA,KAAW;IACrB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BT,MAAO,EAAC,CAAC;IACnE,IAAIU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAChCL,OAAO,CAACI,IAAI,CAAC;EACjB,CAAC;;EAED;EACA,IAAIE,UAAU,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMH,KAAK,CAAE,+BAA8BT,MAAO,EAAC,EAAE;MACjDa,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE;QACJ,aAAa,EAAE;MACnB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC,GAAGZ,IAAI;QAAE,SAAS,EAAE,IAAIa,IAAI;MAAE,CAAC;IAC7D,CAAC,CAAC;EACN,CAAC;EAEG,IAAIC,YAAY,GAAGA,CAAA,KAAM;IACrBP,UAAU,EAAE;IACZX,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,oBACIL,OAAA;IAAKwB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBzB,OAAA;MAAKwB,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBzB,OAAA;QAAAyB,QAAA,eACIzB,OAAA,CAACJ,IAAI;UAAC8B,EAAE,EAAC,GAAG;UAAAD,QAAA,eACRzB,OAAA,CAACF,SAAS;YAAC6B,OAAO,EAAEJ;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACjC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH,eACN/B,OAAA;MAAUgC,QAAQ,EAAGC,CAAC,IAAK;QAACvB,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAE,MAAM,EAAEwB,CAAC,CAACC,MAAM,CAACC;QAAK,CAAC,CAAC;MAAA,CAAE;MAACA,KAAK,EAAE1B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACb;AAEd;AAAC7B,EAAA,CAlDuBD,aAAa;EAAA,QAGpBN,SAAS,EAGHD,WAAW;AAAA;AAAA0C,EAAA,GANVnC,aAAa;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}